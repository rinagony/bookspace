{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport userSlice from './user/slice';\nimport thunk from 'redux-thunk';\nexport const store = configureStore({\n  reducer: {\n    user: userSlice\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(thunk)\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["configureStore","userSlice","thunk","store","reducer","user","middleware","getDefaultMiddleware","concat"],"sources":["/home/ubuntu-online/Desktop/AlisaN/tutorials/the-best-store/client/src/redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport userSlice from './user/slice'\nimport thunk from 'redux-thunk';\nimport { productsSlice } from './products/slice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userSlice,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,KAAK,MAAM,aAAa;AAG/B,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACPC,IAAI,EAAEJ;EACR,CAAC;EACDK,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,EAAE,CAACC,MAAM,CAACN,KAAK;AAC3E,CAAC,CAAC;;AAEF;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}